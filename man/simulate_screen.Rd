% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_screen.R
\name{simulate_screen}
\alias{simulate_screen}
\title{Generate well x gene level data for a pooled screen}
\usage{
simulate_screen(
  n_genes_per_library,
  gene_abundance_factor_mu,
  gene_abundance_factor_var,
  gene_hit_rate,
  n_wells_per_screen,
  well_abundance_factor_mu,
  well_abundance_factor_var,
  n_genes_per_well,
  n_cells_per_well_mu,
  n_cells_per_well_var,
  class_pos_mu,
  class_pos_var,
  class_neg_mu,
  class_neg_var
)
}
\arguments{
\item{n_genes_per_library}{integer number of genes in the library}

\item{gene_abundance_factor_mu}{numeric}

\item{gene_abundance_factor_var}{numeric}

\item{gene_hit_rate}{numeric}

\item{n_wells_per_screen}{integer}

\item{well_abundance_factor_mu}{numeric}

\item{well_abundance_factor_var}{numeric}

\item{n_genes_per_well}{integer}

\item{n_cells_per_well_mu}{numeric}

\item{n_cells_per_well_var}{numeric}

\item{class_pos_mu}{numeric}

\item{class_pos_var}{numeric}

\item{class_neg_mu}{numeric}

\item{class_neg_var}{numeric}
}
\description{
Given assay parameters run the following simulation
\enumerate{
\item Select genotypes from the library as hits/non-hits
\item For each well and genotype pair
\itemize{
\item sample the count of cells with that genotype that are in that well
\item and among those cells the number are classified as positive.
}
}
}
\details{
The count for genoptype i in well j is sampled from the following binomial
distribution

\if{html}{\out{<div class="sourceCode">}}\preformatted{ count_ij ~ binomial(
     size = gene_well_dispersion,                           # check this
     prob = (n_cells_per_well / n_genes_per_library) *
          gene_abundance_factor * well_abundance_factor)
}\if{html}{\out{</div>}}

where the gene and well abundance factors control scale expected abundance
based on the geneotype or well level effects, the gene abundance factor for
geneotype i is sampled from the following gamma distribution:

\if{html}{\out{<div class="sourceCode">}}\preformatted{ gene_abundance_factor_i ~ gamma(
   shape = gene_abundance_factor_mu^2 / gene_abundance_factor_var,
   rate = gene_abundance_factor_mu / gene_abundance_factor_var)
}\if{html}{\out{</div>}}

where gene_abundance_factor_mu and gene_abundance_factor_var control the variation
across different geneoptyes. Similarly, the abundance factor for well j is
sampled from the following gamma distribution:

\if{html}{\out{<div class="sourceCode">}}\preformatted{ well_abundance_factor_i ~ gamma(
   shape = well_abundance_factor_mu^2 / well_abundance_factor_var,
   rate = well_abundance_factor_mu / well_abundance_factor_var)
}\if{html}{\out{</div>}}

The number of positive cells for geneotype i in well j is sampled from a binomial
distribution is defined by

positive_ij ~ binom(
size = count_ij,
prob = ifelse(hit, pos_hit_rate, neg_hit_rate))

where the pos_hit_rate and neg_hit_rate model the accuracy of classifying a
cell as positive or negative given if it has a hit geneotype or not, these are
defined are sampled from beta distributions defined by the mean and standard
deviation of the beta distirbution and then translated into shape parameters

pos_hit_rate_ij ~ beta(
shape1 = class_pos_mu * ((class_pos_mu * (1 - class_pos_mu) / class_pos_var) - 1),
shape2 = (1 - class_pos_mu) * ((class_pos_mu * (1 - class_pos_mu) / class_pos_var) - 1))

neg_hit_rate_ij ~ beta(
n = dplyr::n(),
shape1 = class_neg_mu * ((class_neg_mu * (1 - class_neg_mu) / class_neg_var) - 1),
shape2 = (1 - class_neg_mu) * ((class_neg_mu * (1 - class_neg_mu) / class_neg_var) - 1)))))
}
\examples{
\dontrun{
  scores <- spaCRPower::scan_parameters(
    n_genes_per_library = 200,
    gene_abundance_factor_mu = 1,
    gene_abundance_factor_var = .01,
    gene_hit_rate = 0.05,
    n_wells_per_screen = seq(30, 200, length.out = 35),
    well_abundance_factor_mu = 1,
    well_abundance_factor_var = .01,
    n_genes_per_well = c(1, 3, 10, 30),
    n_cells_per_well_mu = 850,
    n_cells_per_well_var = 1000,
    class_pos_mu = 0.99,
    class_pos_var = 0.0001,
    class_neg_mu = 0.01,
    class_neg_var = 0.0001)
}


}
